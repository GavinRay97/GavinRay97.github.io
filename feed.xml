
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>Gavin Ray Blog</title>
      <link>https://gavinray97.github.io/blog</link>
      <description></description>
      <language>en-us</language>
      <managingEditor>ray.gavin97@gmail.com (Gavin Ray)</managingEditor>
      <webMaster>ray.gavin97@gmail.com (Gavin Ray)</webMaster>
      <lastBuildDate>Sun, 20 Apr 2025 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://gavinray97.github.io/feed.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://gavinray97.github.io/blog/maths-education-blog</guid>
    <title>My Issues with Maths Education in USA Public Schools</title>
    <link>https://gavinray97.github.io/blog/maths-education-blog</link>
    <description>A look at my experience with maths education in the USA and how it has shaped my career.</description>
    <pubDate>Sun, 20 Apr 2025 00:00:00 GMT</pubDate>
    <author>ray.gavin97@gmail.com (Gavin Ray)</author>
    <category>non-technical</category>
  </item>

  <item>
    <guid>https://gavinray97.github.io/blog/what-good-are-record-patterns</guid>
    <title>What good are Record Patterns in Java? An example based on Spark&#39;s Catalyst Optimizer and it&#39;s Tree Rewriting Rules</title>
    <link>https://gavinray97.github.io/blog/what-good-are-record-patterns</link>
    <description>A tutorial on how to use Java&#39;s new Record Patterns feature to write powerful, concise pattern matching code for usecases like AST transformations and rewrite-rules in compiler passes.
</description>
    <pubDate>Sat, 04 Feb 2023 00:00:00 GMT</pubDate>
    <author>ray.gavin97@gmail.com (Gavin Ray)</author>
    <category>java</category><category>jdk</category><category>jvm</category>
  </item>

  <item>
    <guid>https://gavinray97.github.io/blog/postgres-wire-protocol-jdk-21</guid>
    <title>Building a PostgreSQL Wire Protocol Server using Vanilla, Modern Java 21</title>
    <link>https://gavinray97.github.io/blog/postgres-wire-protocol-jdk-21</link>
    <description>A dual-purpose tutorial to 1) Demonstrate how to implement the Simple Query Protocol, where Java is an implementation detail; 2) Show practical examples of most of the new features since JDK 17, including Records, Sealed Types, Pattern Matching for Switch, Virtual Threads, and Panama Foreign-Function &amp; Memory API.
</description>
    <pubDate>Mon, 16 Jan 2023 00:00:00 GMT</pubDate>
    <author>ray.gavin97@gmail.com (Gavin Ray)</author>
    <category>java</category><category>jdk</category><category>jvm</category><category>postgres</category><category>wire-protocol</category><category>databases</category><category>server</category>
  </item>

  <item>
    <guid>https://gavinray97.github.io/blog/adding-invariant-to-cpp-design-by-contract</guid>
    <title>Adding Design-by-Contract [[invariant]] conditions to C++, via a GCC plugin</title>
    <link>https://gavinray97.github.io/blog/adding-invariant-to-cpp-design-by-contract</link>
    <description>Design-by-Contract&#39;s invariant attribute allows you to enforce important properties of systems and data structures, making it an incredibly useful tool for developers. In this blog post, we&#39;ll be exploring the development of a GCC plugin that adds support for [[invariant]] conditions in C++ classes and structs. We&#39;ll also be looking at an example of how invariant can be used to improve the integrity of a Stack data structure. This is especially timely as GCC has recently added support for Contracts, allowing you to annotate functions with pre/post conditions. Don&#39;t miss out on learning how to use this powerful feature in your own projects!
</description>
    <pubDate>Sat, 31 Dec 2022 00:00:00 GMT</pubDate>
    <author>ray.gavin97@gmail.com (Gavin Ray)</author>
    <category>cpp</category><category>gcc</category><category>design-by-contract</category>
  </item>

  <item>
    <guid>https://gavinray97.github.io/blog/a-day-without-a-copilot</guid>
    <title>A Day Without a Copilot: Reflections on Copilot-Driven Development</title>
    <link>https://gavinray97.github.io/blog/a-day-without-a-copilot</link>
    <description>A reflection on the impact of language models like Github Copilot on the experience on authoring software and the role of the developer</description>
    <pubDate>Mon, 05 Dec 2022 00:00:00 GMT</pubDate>
    <author>ray.gavin97@gmail.com (Gavin Ray)</author>
    <category>github-copilot</category><category>machine-learning</category><category>non-technical</category>
  </item>

  <item>
    <guid>https://gavinray97.github.io/blog/io-uring-fixed-bufferpool-zig</guid>
    <title>Building a high-performance database buffer pool in Zig using io_uring&#39;s new fixed-buffer mode</title>
    <link>https://gavinray97.github.io/blog/io-uring-fixed-bufferpool-zig</link>
    <description>In this post, we will explore how to build a high-performance database buffer pool in Zig using io_uring&#39;s new fixed-buffer mode.</description>
    <pubDate>Fri, 14 Oct 2022 00:00:00 GMT</pubDate>
    <author>ray.gavin97@gmail.com (Gavin Ray)</author>
    <category>database</category><category>zig</category><category>io_uring</category><category>performance</category><category>linux</category>
  </item>

  <item>
    <guid>https://gavinray97.github.io/blog/panama-not-so-foreign-memory</guid>
    <title>Panama: Not-so-Foreign Memory. Using MemorySegment as a high-performance ByteBuffer replacement.</title>
    <link>https://gavinray97.github.io/blog/panama-not-so-foreign-memory</link>
    <description>An overview of how the Panama Foreign Memory API can be useful outside of foreign/native applications</description>
    <pubDate>Sat, 03 Sep 2022 00:00:00 GMT</pubDate>
    <author>ray.gavin97@gmail.com (Gavin Ray)</author>
    <category>java</category><category>jvm</category><category>foreign-memory</category><category>panama</category>
  </item>

  <item>
    <guid>https://gavinray97.github.io/blog/building-query-expression-lang-kotlin-sql-jooq</guid>
    <title>Building a Query Expression Language in Kotlin, plus dynamic SQL Generation using jOOQ</title>
    <link>https://gavinray97.github.io/blog/building-query-expression-lang-kotlin-sql-jooq</link>
    <description>A tutorial on building a Query Expression Language/AST in Kotlin and implementing SQL generation</description>
    <pubDate>Sat, 19 Mar 2022 00:00:00 GMT</pubDate>
    <author>ray.gavin97@gmail.com (Gavin Ray)</author>
    <category>kotlin</category><category>sql</category><category>jvm</category><category>query-engines</category><category>jooq</category>
  </item>

    </channel>
  </rss>
